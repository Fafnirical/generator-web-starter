namespace :shared_git do

  git_environmental_variables = {
    git_askpass: "/bin/echo",
    git_ssh:     "#{fetch(:tmp_dir)}/git-ssh.sh"
  }

  desc 'Upload the git wrapper script, this script guarantees that we can script git without getting an interactive prompt'
  task :wrapper do
    on roles :all do
      unless test " [ -f #{fetch(:tmp_dir)}/git-ssh.sh ]"
        execute :sudo, "su - #{fetch(:site_user)} -c '", %{echo "#!/bin/sh -e" >> #{fetch(:tmp_dir)}/git-ssh.sh}, "'"
        execute :sudo, "su - #{fetch(:site_user)} -c '", %{echo "exec /usr/bin/ssh -o PasswordAuthentication=no -o StrictHostKeyChecking=no \"$@\"" >> #{fetch(:tmp_dir)}/git-ssh.sh}, "'"
        execute :sudo, "su - #{fetch(:site_user)} -c \"", :chmod, "+x", "#{fetch(:tmp_dir)}/git-ssh.sh", "\""
      end
    end
  end

  desc 'Check that the repository is reachable'
  task check: :'shared_git:wrapper' do
    fetch(:branch)
    on roles :all do
      with git_environmental_variables do
        exit 1 unless test :sudo, "su - #{fetch(:site_user)} -c \"", :git, :'ls-remote', repo_url, "\""
      end
    end
  end

  desc 'Clone the repo to the cache'
  task clone: :'shared_git:wrapper' do
    on roles :all do
      if test " [ -f #{repo_path}/HEAD ] "
        info t(:mirror_exists, at: repo_path)
      else
        within deploy_path do
          with git_environmental_variables do
            execute :sudo, "su - #{fetch(:site_user)} -c \"", :git, :clone, '--mirror', repo_url, repo_path, "\""
          end
        end
      end
    end
  end

  desc 'Update the repo mirror to reflect the origin state'
  task update: :'shared_git:clone' do
    on roles :all do
      within repo_path do
        execute :sudo, "su #{fetch(:site_user)} -c \"", :git, :remote, :update, "\""
      end
    end
  end

  desc 'Copy repo to releases'
  task create_release: :'shared_git:update' do
    on roles :all do
      with git_environmental_variables do
        within repo_path do
          execute :sudo, "su - #{fetch(:site_user)} -c \"", :mkdir, '-p', release_path, "\""
          execute :sudo, "su #{fetch(:site_user)} -c \"", :git, :archive, fetch(:branch), '| tar -x -C', release_path, "\""
        end
      end
    end
  end
end

